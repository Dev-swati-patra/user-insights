country_details=CREATE TABLE IF NOT EXISTS public.country_details (     country_id integer NOT NULL DEFAULT nextval('country_details_country_id_seq'::regclass),     country_name character varying(255) COLLATE pg_catalog."default" NOT NULL,     country_code integer NOT NULL,     country_short_name character varying(255) COLLATE pg_catalog."default",     CONSTRAINT country_details_pkey PRIMARY KEY (country_id) ) 
district_details=CREATE TABLE IF NOT EXISTS public.district_details (     district_id integer NOT NULL DEFAULT nextval('district_details_district_id_seq'::regclass),     district_name character varying(255) COLLATE pg_catalog."default" NOT NULL,     district_code integer NOT NULL,     district_short_name character varying(255) COLLATE pg_catalog."default",     state_code integer,     CONSTRAINT district_details_pkey PRIMARY KEY (district_id) )
otp_verification=CREATE TABLE IF NOT EXISTS public.otp_verification (     id integer NOT NULL DEFAULT nextval('otp_verification_id_seq'::regclass),     user_name character varying(255) COLLATE pg_catalog."default",     user_email character varying(255) COLLATE pg_catalog."default",     otp character varying(10) COLLATE pg_catalog."default",     expiry_time timestamp without time zone,     is_verified boolean DEFAULT false,     CONSTRAINT otp_verification_pkey PRIMARY KEY (id) )
state_details=CREATE TABLE IF NOT EXISTS public.state_details (     state_id integer NOT NULL DEFAULT nextval('state_details_state_id_seq'::regclass),     state_name character varying(255) COLLATE pg_catalog."default" NOT NULL,     state_code integer NOT NULL,     state_short_name character varying(255) COLLATE pg_catalog."default",     country_code integer NOT NULL,     CONSTRAINT state_details_pkey PRIMARY KEY (state_id) )
user_info=CREATE TABLE IF NOT EXISTS public.user_info (     user_id integer NOT NULL DEFAULT nextval('user_info_user_id_seq'::regclass),     user_name character varying(255) COLLATE pg_catalog."default" NOT NULL,     name character varying(255) COLLATE pg_catalog."default" NOT NULL,     user_email character varying(255) COLLATE pg_catalog."default" NOT NULL,     user_password character varying(255) COLLATE pg_catalog."default" NOT NULL,     user_state_code character varying(255) COLLATE pg_catalog."default",     user_district_code integer,     user_address character varying(255) COLLATE pg_catalog."default",     user_pancard character varying(255) COLLATE pg_catalog."default",     user_passport character varying(255) COLLATE pg_catalog."default",     user_country_code integer,     user_aadhar character varying(255) COLLATE pg_catalog."default",     user_phone_number bigint,     user_age integer,     is_active boolean DEFAULT true,     CONSTRAINT user_info_pkey PRIMARY KEY (user_id) )
user_login_info=CREATE TABLE IF NOT EXISTS public.user_login_info (     id integer NOT NULL DEFAULT nextval('user_login_info_id_seq'::regclass),     user_name character varying(255) COLLATE pg_catalog."default" NOT NULL,     login_time timestamp without time zone NOT NULL,     logout_time timestamp without time zone,     login_status boolean NOT NULL,     ip_address character varying(255) COLLATE pg_catalog."default" NOT NULL,     browser character varying(255) COLLATE pg_catalog."default" NOT NULL,     active_time timestamp without time zone,     CONSTRAINT user_login_info_pkey PRIMARY KEY (id) )
book_details = CREATE TABLE book_details (     id int PRIMARY KEY,     title VARCHAR(255) NOT NULL,     author VARCHAR(255) NOT NULL,     price DECIMAL(10, 2) NOT NULL,     stock INT NOT NULL,     category VARCHAR(100),     description TEXT,     image_url VARCHAR(500),     is_active BOOLEAN DEFAULT TRUE,     created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP );
orders=CREATE TABLE orders (     id int PRIMARY KEY,     user_id int NOT NULL,     total_price DECIMAL(10, 2) NOT NULL CHECK (total_price >= 0),     status VARCHAR(50) NOT NULL DEFAULT 'pending',     created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,      CONSTRAINT fk_order_user FOREIGN KEY (user_id) REFERENCES user_info(user_id) );
order_items=CREATE TABLE order_items (     id int PRIMARY KEY,     order_id int NOT NULL,     book_id int NOT NULL,     quantity INT NOT NULL CHECK (quantity > 0),     price DECIMAL(10, 2) NOT NULL CHECK (price >= 0),     total_price DECIMAL(10, 2) NOT NULL CHECK (total_price >= 0),      CONSTRAINT fk_order FOREIGN KEY (order_id) REFERENCES orders(id),     CONSTRAINT fk_book FOREIGN KEY (book_id) REFERENCES book_details(id) );
cart_items=CREATE TABLE cart_items (     id int PRIMARY KEY,     user_id int NOT NULL,     book_id int NOT NULL,     quantity INT NOT NULL CHECK (quantity > 0),     added_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,         CONSTRAINT fk_cart_user FOREIGN KEY (user_id) REFERENCES user_info(user_id),     CONSTRAINT fk_cart_book FOREIGN KEY (book_id) REFERENCES book_details(id) ); 
reviews=CREATE TABLE reviews (     id int PRIMARY KEY,     user_id int NOT NULL,     book_id int NOT NULL,     rating INT NOT NULL CHECK (rating BETWEEN 1 AND 5),     comment TEXT,     created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,      CONSTRAINT fk_review_user FOREIGN KEY (user_id) REFERENCES user_info(user_id),     CONSTRAINT fk_review_book FOREIGN KEY (book_id) REFERENCES book_details(id),     CONSTRAINT uq_user_book_review UNIQUE (user_id, book_id) -- one review per user per book );

#----------------update table data--------------------
update_1_user_info=alter table user_info add column user_role varchar(10)


#-------------------insert data---------------------
insert_state_details=INSERT INTO public.state_details (state_name, state_code, state_short_name, country_id) VALUES     ('California', 1, 'CA', 1),     ('Texas', 2, 'TX', 1),     ('Ontario', 3, 'ON', 2),     ('Maharashtra', 4, 'MH', 3),  -- India     ('Karnataka', 5, 'KA', 3),     -- India     ('Uttar Pradesh', 6, 'UP', 3),  -- India     ('Tamil Nadu', 7, 'TN', 3);     -- India 
insert_district_details=INSERT INTO public.district_details (district_name, district_code, district_short_name, state_id) VALUES     ('Los Angeles', 101, 'LA', 1),     ('Dallas', 102, 'DL', 2),     ('Toronto', 103, 'TO', 3),     ('Mumbai', 104, 'MB', 4),        -- Maharashtra, India     ('Bengaluru', 105, 'BLR', 5),    -- Karnataka, India     ('Lucknow', 106, 'LK', 6),       -- Uttar Pradesh, India     ('Chennai', 107, 'CHE', 7),      -- Tamil Nadu, India     ('Pune', 108, 'PNE', 4),         -- Maharashtra, India     ('Mysuru', 109, 'MYR', 5),       -- Karnataka, India     ('Agra', 110, 'AGR', 6);         -- Uttar Pradesh, India 
insert_country_details=INSERT INTO public.country_details (country_name, country_code, country_short_name) VALUES     ('United States', 1, 'US'),     ('Canada', 2, 'CA'),     ('Mexico', 3, 'MX'),     ('India', 4, 'IN');  -- Added India

